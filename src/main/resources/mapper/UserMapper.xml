<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="love.xihongshi.dao.UserMapper">
  <resultMap id="BaseResultMap" type="love.xihongshi.bean.User">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="wid" jdbcType="VARCHAR" property="wid" />
    <result column="nickName" jdbcType="VARCHAR" property="nickName" />
    <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="userFlag" jdbcType="INTEGER" property="userFlag"/>
    <result column="workerFlag" jdbcType="INTEGER" property="workerFlag"/>
    <result column="merchantFlag" jdbcType="INTEGER" property="merchantFlag"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, wid, nickName, avatarUrl, gender, province, city, userFlag,
    workerFlag, merchantFlag
  </sql>
  <select id="selectByExample" parameterType="love.xihongshi.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="love.xihongshi.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="love.xihongshi.bean.User">
    insert into user (uid, wid, nickName, avatarUrl, gender, province, city)
    values (#{uid,jdbcType=BIGINT}, #{wid,jdbcType=VARCHAR},
            #{nickName,jdbcType=VARCHAR},
      #{avatarUrl,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
            #{province,jdbcType=VARCHAR},
            #{city,jdbcType=VARCHAR},#{userFlag,jdbcType=INTEGER},
            #{workerFlag,jdbcType=INTEGER}, #{merchantFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="love.xihongshi.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="wid != null">
        wid,
      </if>
      <if test="nickName != null">
        nickName,
      </if>
      <if test="avatarUrl != null">
        avatarUrl,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="userFlag != null">
        userFlag,
      </if>
      <if test="workerFlag != null">
        workerFlag,
      </if>
      <if test="merchantFlag != null">
        merchantFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="wid != null">
        #{wid,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="userFlag != null">
        #{userFlag,jdbcType=INTEGER},
      </if>
      <if test="workerFlag != null">
        #{workerFlag,jdbcType=INTEGER},
      </if>
      <if test="merchantFlag != null">
        #{merchantFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="love.xihongshi.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.wid != null">
        wid = #{record.wid,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nickName = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.userFlag != null">
        userFlag = #{record.userFlag,jdbcType=INTEGER},
      </if>
      <if test="record.workerFlag != null">
        workerFlag = #{record.workerFlag,jdbcType=INTEGER},
      </if>
      <if test="record.merchantFlag != null">
        merchantFlag = #{record.merchantFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set
      wid = #{record.wid,jdbcType=VARCHAR},
      nickName = #{record.nickName,jdbcType=VARCHAR},
      avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      userFlag = #{record.userFlag,jdbcType=INTEGER},
      workerFlag = #{record.workerFlag,jdbcType=INTEGER},
      merchantFlag = #{record.merchantFlag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="love.xihongshi.bean.User">
    update user
    <set>
      <if test="record.wid != null">
        wid = #{record.wid,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nickName = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.userFlag != null">
        userFlag = #{record.userFlag,jdbcType=INTEGER},
      </if>
      <if test="record.workerFlag != null">
        workerFlag = #{record.workerFlag,jdbcType=INTEGER},
      </if>
      <if test="record.merchantFlag != null">
        merchantFlag = #{record.merchantFlag,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="love.xihongshi.bean.User">
    update user
    set wid = #{record.wid,jdbcType=VARCHAR},
        nickName = #{record.nickName,jdbcType=VARCHAR},
        avatarUrl = #{record.avatarUrl,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=INTEGER},
        province = #{record.province,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=VARCHAR},
        userFlag = #{record.userFlag,jdbcType=INTEGER},
        workerFlag = #{record.workerFlag,jdbcType=INTEGER},
        merchantFlag = #{record.merchantFlag,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>