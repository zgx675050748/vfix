<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="love.xihongshi.dao.DemandMapper">
  <resultMap id="BaseResultMap" type="love.xihongshi.bean.Demand">
    <id column="did" jdbcType="BIGINT" property="did" />
    <result column="releasedate" jdbcType="TIMESTAMP" property="releasedate" />
    <result column="enddate" jdbcType="TIMESTAMP" property="enddate" />
    <result column="dstatus" jdbcType="VARCHAR" property="dstatus" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="phonenum" jdbcType="VARCHAR" property="phonenum" />
    <result column="shortcut" jdbcType="VARCHAR" property="shortcut"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
  </resultMap>


  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="love.xihongshi.bean.Demand">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <resultMap id="BaseResultMapWithUser" type="love.xihongshi.bean.Demand">
    <id column="did" jdbcType="BIGINT" property="did" />
    <result column="releasedate" jdbcType="TIMESTAMP" property="releasedate" />
    <result column="enddate" jdbcType="TIMESTAMP" property="enddate" />
    <result column="dstatus" jdbcType="VARCHAR" property="dstatus" />
    <result column="phonenum" jdbcType="VARCHAR" property="phonenum" />
    <result column="shortcut" jdbcType="VARCHAR" property="shortcut"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <association property="user"
                 javaType="love.xihongshi.bean.User">
      <id column="uid" jdbcType="BIGINT" property="uid" />
      <result column="wid" jdbcType="VARCHAR" property="wid" />
      <result column="nickName" jdbcType="VARCHAR" property="nickName" />
      <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl" />
      <result column="gender" jdbcType="INTEGER" property="gender" />
      <result column="province" jdbcType="VARCHAR" property="province" />
      <result column="city" jdbcType="VARCHAR" property="city" />
      <result column="userFlag" jdbcType="INTEGER" property="userFlag"/>
      <result column="workerFlag" jdbcType="INTEGER" property="workerFlag"/>
      <result column="merchantFlag" jdbcType="INTEGER" property="merchantFlag"/>
    </association>
  </resultMap>

  <resultMap extends="BaseResultMapWithUser" id="ResultMapWithBLOBsWithUser"
             type="love.xihongshi.bean.Demand">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    did, releasedate, enddate, dstatus, uid, phonenum, shortcut, address
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <sql id="Base_Column_List_User">
    d.did, d.releasedate, d.enddate, d.dstatus, d.phonenum, d.shortcut,
    address, u.uid,
     u.wid,
    u.nickName, u.avatarUrl, u.gender, u.province, u.city
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="love.xihongshi.bean.DemandExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="love.xihongshi.bean.DemandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demand
    where did = #{did,jdbcType=BIGINT}
  </select>

<!--  联合查询User-->
  <select id="selectByExampleWithBLOBsWithUser"
          parameterType="love.xihongshi.bean.DemandExample" resultMap="ResultMapWithBLOBsWithUser">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_User" />
    ,
    <include refid="Blob_Column_List" />
    from demand d left join user u on d.uid=u.uid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithUser"
          parameterType="love.xihongshi.bean.DemandExample" resultMap="BaseResultMapWithUser">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_User" />
    from demand d left join user u on d.uid=u.uid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithUser" parameterType="java.lang.Long"
          resultMap="ResultMapWithBLOBsWithUser">
    select
    <include refid="Base_Column_List_User" />
    ,
    <include refid="Blob_Column_List" />
    from demand d left join user u on d.uid=u.uid
    where did = #{did,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from demand
    where did = #{did,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="love.xihongshi.bean.DemandExample">
    delete from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="love.xihongshi.bean.Demand">
    insert into demand (did, releasedate, enddate, 
      dstatus, uid, phonenum, 
      shortcut, content, address)
    values (#{did,jdbcType=BIGINT}, #{releasedate,jdbcType=TIMESTAMP}, #{enddate,jdbcType=TIMESTAMP}, 
      #{dstatus,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, #{phonenum,jdbcType=INTEGER}, 
      #{shortcut,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},
            #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="love.xihongshi.bean.Demand">
    insert into demand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="did != null">
        did,
      </if>
      <if test="releasedate != null">
        releasedate,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
      <if test="dstatus != null">
        dstatus,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="phonenum != null">
        phonenum,
      </if>
      <if test="shortcut != null">
        shortcut,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="did != null">
        #{did,jdbcType=BIGINT},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="dstatus != null">
        #{dstatus,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="shortcut != null">
        #{shortcut,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="love.xihongshi.bean.DemandExample" resultType="java.lang.Long">
    select count(*) from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demand
    <set>
      <if test="record.did != null">
        did = #{record.did,jdbcType=BIGINT},
      </if>
      <if test="record.releasedate != null">
        releasedate = #{record.releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enddate != null">
        enddate = #{record.enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dstatus != null">
        dstatus = #{record.dstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.phonenum != null">
        phonenum = #{record.phonenum,jdbcType=INTEGER},
      </if>
      <if test="record.shortcut != null">
        shortcut = #{record.shortcut,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update demand
    set did = #{record.did,jdbcType=BIGINT},
      releasedate = #{record.releasedate,jdbcType=TIMESTAMP},
      enddate = #{record.enddate,jdbcType=TIMESTAMP},
      dstatus = #{record.dstatus,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=BIGINT},
      phonenum = #{record.phonenum,jdbcType=INTEGER},
      shortcut = #{record.shortcut,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demand
    set did = #{record.did,jdbcType=BIGINT},
      releasedate = #{record.releasedate,jdbcType=TIMESTAMP},
      enddate = #{record.enddate,jdbcType=TIMESTAMP},
      dstatus = #{record.dstatus,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=BIGINT},
      phonenum = #{record.phonenum,jdbcType=INTEGER},
      shortcut = #{record.shortcut,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="love.xihongshi.bean.Demand">
    update demand
    <set>
      <if test="releasedate != null">
        releasedate = #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=TIMESTAMP},
      </if>
      <if test="dstatus != null">
        dstatus = #{dstatus,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="phonenum != null">
        phonenum = #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="shortcut != null">
        shortcut = #{shortcut,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where did = #{did,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="love.xihongshi.bean.Demand">
    update demand
    set releasedate = #{releasedate,jdbcType=TIMESTAMP},
      enddate = #{enddate,jdbcType=TIMESTAMP},
      dstatus = #{dstatus,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      phonenum = #{phonenum,jdbcType=INTEGER},
      shortcut = #{shortcut,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where did = #{did,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="love.xihongshi.bean.Demand">
    update demand
    set releasedate = #{releasedate,jdbcType=TIMESTAMP},
      enddate = #{enddate,jdbcType=TIMESTAMP},
      dstatus = #{dstatus,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      phonenum = #{phonenum,jdbcType=INTEGER},
      shortcut = #{shortcut,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where did = #{did,jdbcType=BIGINT}
  </update>
</mapper>