<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="love.xihongshi.dao.CommodityOrderFormMapper">
  <resultMap id="BaseResultMap" type="love.xihongshi.bean.CommodityOrderForm">
    <id column="ofid" jdbcType="BIGINT" property="ofid" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="releaseDate" jdbcType="DATE" property="releasedate" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="phoneNum" jdbcType="VARCHAR" property="phonenum" />
  </resultMap>
  <resultMap id="BaseResultMapWithCommodityAndUser"
             type="love.xihongshi.bean.CommodityOrderForm">
    <id column="ofid" jdbcType="BIGINT" property="ofid" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="releaseDate" jdbcType="DATE" property="releasedate" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="phoneNum" jdbcType="VARCHAR" property="phonenum" />
    <result column="comment" jdbcType="VARCHAR" property="comment"/>
    <association property="user"
                 javaType="love.xihongshi.bean.User">
      <result column="wid" jdbcType="VARCHAR" property="wid" />
      <result column="nickName" jdbcType="VARCHAR" property="nickName" />
      <result column="avatarUrl" jdbcType="VARCHAR" property="avatarUrl" />
      <result column="gender" jdbcType="INTEGER" property="gender" />
      <result column="province" jdbcType="VARCHAR" property="province" />
      <result column="city" jdbcType="VARCHAR" property="city" />
      <result column="userFlag" jdbcType="INTEGER" property="userFlag"/>
      <result column="workerFlag" jdbcType="INTEGER" property="workerFlag"/>
      <result column="merchantFlag" jdbcType="INTEGER" property="merchantFlag"/>
    </association>
    <association property="commodity"
                 javaType="love.xihongshi.bean.Commodity">
      <result column="cname" jdbcType="VARCHAR" property="cname"/>
      <result column="price" jdbcType="DOUBLE" property="price"/>
      <result column="mid" jdbcType="BIGINT" property="mid"/>
      <result column="iconUrl" jdbcType="VARCHAR" property="iconUrl"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ofid, cid, uid, address, releaseDate, count, money, phoneNum, comment
  </sql>
  <sql id="Base_Column_List_Commodity_User">
    cof.ofid, cof.cid, cof.uid, cof.address, cof.releaseDate, cof.count,
    cof.money, cof.phoneNum, cof.comment, c.cname, c.price, c.mid, c.iconUrl,
     u.nickName
  </sql>
  <select id="selectByExample" parameterType="love.xihongshi.bean.CommodityOrderFormExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodityOrderForm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodityOrderForm
    where ofid = #{ofid,jdbcType=BIGINT}
  </select>

<!--  多表查询-->
  <select id="selectByExampleWithCommodityAndUser"
          parameterType="love.xihongshi.bean.CommodityOrderFormExample" resultMap="BaseResultMapWithCommodityAndUser">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List_Commodity_User" />
    from commodityOrderForm cof left join commodity c on cof.cid=c.cid left
    join
    `user` u on cof.uid=u.uid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithCommodityAndUser" parameterType="java.lang.Long" resultMap="BaseResultMapWithCommodityAndUser">
    select
    <include refid="Base_Column_List_Commodity_User" />
    from commodityOrderForm cof join commodity c on cof.cid=c.cid join `user` u on cof.uid=u.uid
    where ofid = #{ofid,jdbcType=BIGINT}
  </select>
  <select id="selectByUidWithCommodityAndUser"
          parameterType="java.lang.Long" resultMap="BaseResultMapWithCommodityAndUser">
    select
    <include refid="Base_Column_List_Commodity_User" />
    from commodityOrderForm cof left join commodity c on cof.cid=c.cid left
    join
    `user` u on cof.uid=u.uid
    <where>
      cof.uid = #{uid}
    </where>
  </select>
  <select id="selectByCidWithCommentAndUser"
          parameterType="java.lang.Long" resultMap="BaseResultMapWithCommodityAndUser">
    select
        cof.comment, u.nickName, u.avatarUrl
    from
        commodityOrderForm cof join `user` u
    on
        cof.uid=u.uid
    where
        cof.cid=#{cid}
  </select>
  <select id="selectByMerchantWithCommodityOFAndCommodityMin"
          parameterType="java.lang.Long"
          resultMap="BaseResultMapWithCommodityAndUser">
    select
    c.cname, c.iconUrl, cof.ofid, cof.releaseDate, cof.money
    from merchant m join commodity c on m.mid=c.mid join commodityOrderForm
      cof on c.cid=cof.cid
    where m.uid=#{uid}
  </select>
<!--  多表模糊查询-->
  <select id="searchWithCommodityAndUser" parameterType="love.xihongshi.bean.SearchCommodityOrderForm"
          resultMap="BaseResultMapWithCommodityAndUser">
    select
    <include refid="Base_Column_List_Commodity_User" />
    from commodityOrderForm cof left join commodity c on cof.cid=c.cid left
    join
    `user` u on cof.uid=u.uid
    <where>
      cof.uid = #{uid}
    <if test="releaseDate != null">
      and cof.releaseDate like concat('%',#{releaseDate},'%')
    </if>
    <if test="cname != null">
      or c.cname like concat('%',#{cname},'%')
    </if>
    <if test="money != null">
      or cof.money like concat('%',#{money},'%')
    </if>
    </where>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from commodityOrderForm
    where ofid = #{ofid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="love.xihongshi.bean.CommodityOrderFormExample">
    delete from commodityOrderForm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="love.xihongshi.bean.CommodityOrderForm">
    insert into commodityOrderForm (ofid, cid, uid, 
      address, releaseDate, count, 
      money, phoneNum, comment)
    values (#{ofid,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{releasedate,jdbcType=DATE}, #{count,jdbcType=INTEGER}, 
      #{money,jdbcType=DOUBLE}, #{phonenum,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="love.xihongshi.bean.CommodityOrderForm">
    insert into commodityOrderForm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ofid != null">
        ofid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="releasedate != null">
        releaseDate,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="phonenum != null">
        phoneNum,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ofid != null">
        #{ofid,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=DATE},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="love.xihongshi.bean.CommodityOrderFormExample" resultType="java.lang.Long">
    select count(*) from commodityOrderForm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodityOrderForm
    <set>
      <if test="record.ofid != null">
        ofid = #{record.ofid,jdbcType=BIGINT},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.releasedate != null">
        releaseDate = #{record.releasedate,jdbcType=DATE},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.phonenum != null">
        phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodityOrderForm
    set ofid = #{record.ofid,jdbcType=BIGINT},
      cid = #{record.cid,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      releaseDate = #{record.releasedate,jdbcType=DATE},
      count = #{record.count,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
    comment = #{record.comment,jdbcType=VARCHAR},
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="love.xihongshi.bean.CommodityOrderForm">
    update commodityOrderForm
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="releasedate != null">
        releaseDate = #{releasedate,jdbcType=DATE},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="phonenum != null">
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where ofid = #{ofid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="love.xihongshi.bean.CommodityOrderForm">
    update commodityOrderForm
    set cid = #{cid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      releaseDate = #{releasedate,jdbcType=DATE},
      count = #{count,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      phoneNum = #{phonenum,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
    where ofid = #{ofid,jdbcType=BIGINT}
  </update>
</mapper>